<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>